<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>